<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>